<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>